<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>